<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>